[{"E:\\TXS\\dbrr\\cuc\\apprac\\src\\pages\\home.tsx":"1","E:\\TXS\\dbrr\\cuc\\apprac\\src\\components\\registerForm.tsx":"2","E:\\TXS\\dbrr\\cuc\\apprac\\src\\components\\loginForm.tsx":"3","E:\\TXS\\dbrr\\cuc\\apprac\\src\\components\\common\\navbar.tsx":"4","E:\\TXS\\dbrr\\cuc\\apprac\\src\\store\\auth\\index.ts":"5"},{"size":572,"mtime":1610269245259,"results":"6","hashOfConfig":"7"},{"size":4727,"mtime":1610269680036,"results":"8","hashOfConfig":"7"},{"size":4295,"mtime":1610269696903,"results":"9","hashOfConfig":"7"},{"size":3010,"mtime":1610373839525,"results":"10","hashOfConfig":"7"},{"size":1404,"mtime":1610373786816,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1lgqkd1",{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\TXS\\dbrr\\cuc\\apprac\\src\\pages\\home.tsx",[],"E:\\TXS\\dbrr\\cuc\\apprac\\src\\components\\registerForm.tsx",[],"E:\\TXS\\dbrr\\cuc\\apprac\\src\\components\\loginForm.tsx",["23"],"import * as React from \"react\";\r\nimport { FunctionComponent } from \"react\";\r\n\r\nimport { useForm } from \"react-hook-form\";\r\nimport { store } from \"../store\";\r\nimport { userActions } from \"../store/auth\";\r\n\r\nimport \"../styles/components/common/form.scss\";\r\nimport \"../styles/components/common/main.scss\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport interface LoginFormProps {}\r\n\r\ninterface LoginUserProps {\r\n        username: string;\r\n        password: string;\r\n}\r\n\r\nconst LoginForm: FunctionComponent<LoginFormProps> = () => {\r\n        const { register, handleSubmit, getValues } = useForm<LoginUserProps>({\r\n                defaultValues: {\r\n                        username: \"op12345678\",\r\n                        password: \"123456789\",\r\n                },\r\n        });\r\n\r\n        const history = useHistory();\r\n\r\n        const onSubmit = React.useCallback(() => {\r\n                const obj = { username: getValues(\"username\"), password: getValues(\"password\") };\r\n                store.dispatch(userActions.loginUser(obj));\r\n        }, [getValues]);\r\n\r\n        return (\r\n                <div className=\"container container__form\">\r\n                        <div className=\"form\">\r\n                                <div className=\"form__name-service\">\r\n                                        <h2>Login with</h2>\r\n                                        <div className=\"form__name-service__logo\">\r\n                                                <img src=\"/images/logo.svg\" alt=\"\" />\r\n                                        </div>\r\n                                </div>\r\n                                <form className=\"form__info\" onSubmit={handleSubmit(onSubmit)}>\r\n                                        <label htmlFor=\"username\">Username</label>\r\n                                        <input type=\"text\" id=\"username\" name=\"username\" ref={register} />\r\n                                        <label htmlFor=\"password\">Password</label>\r\n                                        <input type=\"password\" id=\"password\" name=\"password\" ref={register} />\r\n                                        <a className=\"form__forgot\" href=\"https://www.google.com/\">\r\n                                                Forgot your password?\r\n                                        </a>\r\n                                        <button className=\"btn\" type=\"submit\">\r\n                                                Sign In\r\n                                        </button>\r\n                                </form>\r\n\r\n                                <div className=\"form__others\">\r\n                                        <div className=\"form__others__icon\">\r\n                                                <img src=\"/images/google.svg\" alt=\"\" />\r\n                                        </div>\r\n                                        <a href=\"http://localhost:4000/api/auth/google\" className=\"form__others__text\">\r\n                                                Continue with Google\r\n                                        </a>\r\n                                </div>\r\n                                <div className=\"form__others\">\r\n                                        <div className=\"form__others__icon\">\r\n                                                <img src=\"/images/facebook.svg\" alt=\"\" />\r\n                                        </div>\r\n                                        <a className=\"form__others__text\" href=\"http://localhost:4000/api/auth/facebook\">\r\n                                                Continue with Facebook\r\n                                        </a>\r\n                                </div>\r\n                                <div className=\"form__others\">\r\n                                        <div className=\"form__others__icon\">\r\n                                                <img src=\"/images/github.svg\" alt=\"\" />\r\n                                        </div>\r\n                                        <a className=\"form__others__text\" href=\"http://localhost:4000/api/auth/github\">\r\n                                                Continue with Github\r\n                                        </a>\r\n                                </div>\r\n                        </div>\r\n                </div>\r\n        );\r\n};\r\n\r\nexport default LoginForm;\r\n","E:\\TXS\\dbrr\\cuc\\apprac\\src\\components\\common\\navbar.tsx",[],"E:\\TXS\\dbrr\\cuc\\apprac\\src\\store\\auth\\index.ts",[],{"ruleId":"24","severity":1,"message":"25","line":27,"column":15,"nodeType":"26","messageId":"27","endLine":27,"endColumn":22},"@typescript-eslint/no-unused-vars","'history' is assigned a value but never used.","Identifier","unusedVar"]